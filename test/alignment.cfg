process Alignment = {
    
    # initialize  MessageLogger
    service = MessageLogger { 
        untracked vstring destinations = { "cout", "alignment" } # .log automatically
		untracked vstring statistics = { "cout", "alignment"}
        
		untracked vstring categories = { "Alignment" }
		
		untracked PSet cout= { 
			untracked string threshold = "DEBUG" 
			untracked bool noLineBreaks = true 
		}
		untracked PSet alignment  = { 
			untracked string threshold = "INFO" 
			untracked PSet INFO = { untracked int32 limit = 0 }
			untracked PSet WARNING = { untracked int32 limit = 0 }
			untracked PSet ERROR = { untracked int32 limit = 0 }
			untracked PSet DEBUG = { untracked int32 limit = 0 }
			untracked PSet Alignment = { untracked int32 limit = -1}
			untracked bool noLineBreaks = true 
		}
        #   vstring debugModules = { "*" }
    }

    # we need conditions
    include "Configuration/StandardSequences/data/FrontierConditions_GlobalTag.cff"    
    replace GlobalTag.globaltag = "IDEAL::All"
    # include "Configuration/StandardSequences/data/FakeConditions.cff"

    # initialize magnetic field
    include "Configuration/StandardSequences/data/MagneticField.cff"
    
    # ideal geometry and interface
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    # for Muon: include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

    include "RecoVertex/BeamSpotProducer/data/BeamSpot.cfi"

    # track selection for alignment
    include "Alignment/CommonAlignmentProducer/data/AlignmentTrackSelector.cfi" 

    # Alignment producer
    include "Alignment/CommonAlignmentProducer/data/AlignmentProducer.cff"
    # replace AlignmentProducer.doMisalignmentScenario = true
    # replace AlignmentProducer.applyDbAlignment = true # needs other conditions than fake!
    
    # Track refitter (adapted to alignment needs)
    include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"
    replace TrackRefitter.src = "AlignmentTrackSelector"
    replace TrackRefitter.TrajectoryInEvent = true
    # beam halo propagation needs larger phi changes going from one TEC to another
    # replace MaterialPropagator.MaxDPhi = 1000.
 
    # input file
#    untracked PSet maxEvents   = { untracked int32 input = 200 }
    source = PoolSource { 
        untracked vstring fileNames = { 
            # relval file from CMSSW_2_1_0_pre5:
	    "/store/relval/2008/6/4/RelVal-RelValZMM-1212543891-STARTUP-2nd/0000/0A9973E2-9A32-DD11-BE04-001617E30F50.root"
        }
        untracked uint32 skipEvents = 0
    }	
    
    path p = { offlineBeamSpot, AlignmentTrackSelector, TrackRefitter }
    
    # REPLACEME (needed for inserting replace statements by perl script!)

}

