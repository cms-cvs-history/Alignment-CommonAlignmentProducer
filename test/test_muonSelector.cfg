process MuonAlignment = {
    
    # initialize  MessageLogger
    service = MessageLogger { 
        untracked vstring destinations = { "cout", "alignment" } # .log automatically
		untracked vstring statistics = { "cout", "alignment"}
        
		untracked vstring categories = { "Alignment" }
		
		untracked PSet cout= { 
			untracked string threshold = "DEBUG" 
			untracked bool noLineBreaks = true 
		}
		untracked PSet alignment  = { 
			untracked string threshold = "INFO" 
			untracked PSet INFO = { untracked int32 limit = 0 }
			untracked PSet WARNING = { untracked int32 limit = 0 }
			untracked PSet ERROR = { untracked int32 limit = 0 }
			untracked PSet DEBUG = { untracked int32 limit = 0 }
			untracked PSet Alignment = { untracked int32 limit = -1}
			untracked bool noLineBreaks = true 
		}
        #   vstring debugModules = { "*" }
	}

#	include "FWCore/MessageLogger/data/MessageLogger.cfi"
	
	# initialize magnetic field
	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
	
	# ideal geometry and interface
	include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
	include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
	
	# track selection for alignment
	module AlignmentMuons = AlignmentMuonSelectorModule {
		InputTag src = globalMuons
		bool filter = true
		
		bool applyBasicCuts = true
		double ptMin      = 0. 
		double ptMax      = 999.
		double etaMin     = -2.4
		double etaMax     =  2.4
		double phiMin     = -3.1416
		double phiMax     =  3.1416
		# Stand Alone Muons
		double nHitMinSA  =  0
		double nHitMaxSA  = 9999999
		double chi2nMaxSA = 9999999.
		# Global Muons
		double nHitMinGB  =  0
		double nHitMaxGB  = 9999999
		double chi2nMaxGB = 9999999.
		# Tracker Only
		double nHitMinTO  =  0
		double nHitMaxTO  = 9999999
		double chi2nMaxTO = 9999999.
		
		bool applyNHighestPt = false
		int32 nHighestPt = 2
		
		bool applyMultiplicityFilter = false
		int32 minMultiplicity = 1

  // copy best mass pair combination muons to result vector
  // Criteria: 
  // a) maxMassPair != minMassPair: the two highest pt muons with mass pair inside the given mass window
  // b) maxMassPair == minMassPair: the muon pair with mass pair closest to given mass value
		bool applyMassPairFilter = false
		double minMassPair = 0.
		double maxMassPair = 99999.

	}
	

    # input file
    source = PoolSource { 
	untracked vstring fileNames = {"file:/afs/cern.ch/user/p/pivarski/public/muon_alignment_sample.root"}
    }	
    untracked PSet maxEvents=
    {
	untracked int32 input = 10
    }

        module out = PoolOutputModule {
                untracked vstring outputCommands = {
                "drop *" ,
		"keep *_AlignmentMuons_*_*",
		"keep *_dt1DRecHits_*_*",
		"keep *_dt2DSegments_*_*",
		"keep *_dt4DSegments_*_*",
 		"keep *_csc2DRecHits_*_*",
		"keep *_cscSegments_*_*",
		"keep *_rpcRecHits_*_*"
               }
	 untracked PSet SelectEvents = {     
	  vstring SelectEvents = { "p" }
	     }  

                untracked string fileName ="Ntuple.root"
        }


#    module eventcontent = EventContentAnalyzer {}

#    module evtInfo = AsciiOutputModule{}

    path p = { AlignmentMuons}
    endpath e ={ out }
    
    # REPLACEME (needed for inserting replace statements by perl script!)

}

