process test = {
    source = PoolSource {
	untracked vstring fileNames = {"file:///NOBACKUP/work/samples/beamhalo200.root"}
    }
    
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/CommonDetUnit/data/bareGlobalTrackingGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    include "Geometry/CSCGeometry/data/cscGeometry.cfi"
    include "Geometry/RPCGeometry/data/rpcGeometry.cfi"
    
    include "RecoMuon/TrackingTools/data/MuonServiceProxy.cff"
    include "RecoMuon/TrackingTools/data/MuonTrackLoader.cff"
    es_module = MuonDetLayerGeometryESProducer {}
    
    include "RecoMuon/MuonSeedGenerator/data/CosmicMuonSeedProducer.cfi"
    replace CosmicMuonSeed.EnableDTMeasurement = false

    module cosmicMuons2 = CosmicMuonProducer{
	
	untracked string MuonSeedCollectionLabel = "CosmicMuonSeed"
	
	using MuonServiceProxy
	using MuonTrackLoaderForCosmic
	
	PSet TrajectoryBuilderParameters = {
	    string Propagator = "SteppingHelixPropagatorAny"
	    untracked bool BuildTraversingMuon = true
	    untracked bool EnableDTMeasurement = true
	    untracked bool EnableCSCMeasurement = true
	    untracked bool EnableRPCMeasurement = false
	    PSet MuonTrajectoryUpdatorParameters = {
		double MaxChi2 = 30000 # need to be huge at this step
		int32 Granularity = 0 #ONLY 0! otherwise may got wrong RH order
		bool RescaleError = false
		double RescaleErrorFactor = 1. 
	    }       
	    PSet BackwardMuonTrajectoryUpdatorParameters = {
		double MaxChi2 = 100 # smaller at this step
		int32 Granularity = 2
		bool RescaleError = false
		double RescaleErrorFactor = 1. 
	    }
	    PSet MuonSmootherParameters = {
		string PropagatorAlong = "SteppingHelixPropagatorAlong"
		string PropagatorOpposite = "SteppingHelixPropagatorOpposite"
	    }
	    
	}
	
    }
    
    module ALCARECOMuAlBeamHaloOverlaps1 = AlignmentCSCBeamHaloSelectorModule {
	InputTag src = cosmicMuons2
	bool filter = true
	
	uint32 minStations = 0 # no "energy cut" yet
	uint32 minHitsPerStation = 4
    }
    
    module ALCARECOMuAlBeamHaloOverlaps2 = AlignmentCSCOverlapSelectorModule {
	InputTag src = ALCARECOMuAlBeamHaloOverlaps1
	bool filter = true
	
	int32 station = 0  # all stations: I'll need to split it by station (8 subsamples) offline
	uint32 minHitsPerChamber = 4
    }
    
    sequence seqALCARECOMuAlBeamHaloOverlaps = { ALCARECOMuAlBeamHaloOverlaps1, ALCARECOMuAlBeamHaloOverlaps2 }
    
    module EventContentAnalyzer = EventContentAnalyzer {}

    path p = {CosmicMuonSeed, cosmicMuons2, seqALCARECOMuAlBeamHaloOverlaps, EventContentAnalyzer}
}
