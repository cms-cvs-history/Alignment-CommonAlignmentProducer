# AlCaReco for muon based alignment using beam-halo muons in the CSC overlap regions

module ALCARECOMuAlBeamHaloOverlapsHLT = hltHighLevel from "HLTrigger/HLTfilters/data/hltHighLevel.cfi"
replace ALCARECOMuAlBeamHaloOverlapsHLT.HLTPaths = {"CandHLTCSCBeamHaloOverlapRing1", "CandHLTCSCBeamHaloOverlapRing2"}

include "RecoLocalMuon/CSCSegment/data/cscSegments.cfi"
# Choice of the building algo: 1 SK, 2 TC, 3 DF, 4 ST, ...
replace cscSegments.algo_type = 4

include "Geometry/CommonDetUnit/data/bareGlobalTrackingGeometry.cfi"
include "RecoMuon/DetLayers/data/muonDetLayerGeometry.cfi"

include "RecoMuon/MuonSeedGenerator/data/CosmicMuonSeedProducer.cfi"
replace CosmicMuonSeed.EnableDTMeasurement = false
include "RecoMuon/CosmicMuonProducer/data/cosmicMuons.cfi"

sequence reconstructAsCosmicMuons = { cscSegments, CosmicMuonSeed, cosmicMuons }

module ALCARECOMuAlBeamHaloOverlapsEnergyCut = AlignmentCSCBeamHaloSelectorModule {
    InputTag src = cosmicMuons
    bool filter = true
    
    uint32 minStations = 0 # no "energy cut" yet
    uint32 minHitsPerStation = 4
}

module ALCARECOMuAlBeamHaloOverlaps = AlignmentCSCOverlapSelectorModule {
    InputTag src = ALCARECOMuAlBeamHaloOverlapsEnergyCut
    bool filter = true
    
    int32 station = 0  # all stations: I'll need to split it by station (8 subsamples) offline
    uint32 minHitsPerChamber = 4
}

sequence seqALCARECOMuAlBeamHaloOverlaps = { ALCARECOMuAlBeamHaloOverlapsHLT &
    reconstructAsCosmicMuons, ALCARECOMuAlBeamHaloOverlapsEnergyCut, ALCARECOMuAlBeamHaloOverlaps }
    
    